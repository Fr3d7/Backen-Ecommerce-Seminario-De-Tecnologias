name: backend-ci

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

concurrency:
  group: backend-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-migrate:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      ASPNETCORE_ENVIRONMENT: CI

    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          ACCEPT_EULA: "Y"
          SA_PASSWORD: ${{ secrets.CI_MSSQL_SA_PASSWORD }}
        ports:
          - 1433:1433
        options: >-
          --health-cmd "/opt/mssql-tools18/bin/sqlcmd -C -S localhost -U sa -P ${{ secrets.CI_MSSQL_SA_PASSWORD }} -Q 'SELECT 1'"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 60

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      # Espera a que el contenedor SQL del servicio estÃ© healthy (usando Docker)
      - name: Wait for SQL to be healthy
        shell: bash
        run: |
          for i in {1..120}; do
            status=$(docker inspect -f '{{.State.Health.Status}}' ${{ job.services.mssql.id }})
            echo "SQL health: $status"
            if [ "$status" = "healthy" ]; then exit 0; fi
            sleep 1
          done
          echo "SQL is not healthy"
          docker logs ${{ job.services.mssql.id }}
          exit 1

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Install EF tools
        run: dotnet tool install --global dotnet-ef

      - name: Add dotnet tools to PATH
        shell: bash
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Apply EF migrations
        env:
          # dejo ambos nombres por si tu appsettings usa DefaultConnection
          ConnectionStrings__ConnectionString: "Server=localhost,1433;Database=EcommerceCI;User Id=sa;Password=${{ secrets.CI_MSSQL_SA_PASSWORD }};TrustServerCertificate=True;MultipleActiveResultSets=True"
          ConnectionStrings__DefaultConnection: "Server=localhost,1433;Database=EcommerceCI;User Id=sa;Password=${{ secrets.CI_MSSQL_SA_PASSWORD }};TrustServerCertificate=True;MultipleActiveResultSets=True"
          JwtSettings__Key: ${{ secrets.CI_JWT_KEY }}
        run: dotnet ef database update --project src/Api/ --startup-project src/Api/

      # Opcional: que no bloquee
      - name: Unit tests (non-blocking)
        run: dotnet test --no-restore --no-build || true
