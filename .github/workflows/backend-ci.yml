name: backend-ci

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

concurrency:
  group: backend-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-migrate:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      ASPNETCORE_ENVIRONMENT: CI

    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          ACCEPT_EULA: "Y"
          SA_PASSWORD: ${{ secrets.CI_MSSQL_SA_PASSWORD }}
        ports: [ "1433:1433" ]
        options: >-
          --health-cmd="/opt/mssql-tools18/bin/sqlcmd -C -S 127.0.0.1 -U sa -P ${{ secrets.CI_MSSQL_SA_PASSWORD }} -Q 'SELECT 1'"
          --health-interval=10s --health-timeout=5s --health-retries=20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"
          cache: true

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Install dotnet-ef
        run: dotnet tool install --global dotnet-ef

      - name: Add dotnet tools to PATH
        shell: bash
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Wait for SQL to be healthy
        run: |
          for i in {1..30}; do
            /opt/mssql-tools18/bin/sqlcmd -C -S 127.0.0.1 -U sa -P "${{ secrets.CI_MSSQL_SA_PASSWORD }}" -Q "SELECT 1" && break
            echo "SQL not ready yet..."; sleep 2
          done

      # ðŸ‘‡ Aplica las migraciones contra el SQL del servicio
      - name: Apply EF migrations against CI SQL
        env:
          ConnectionStrings__ConnectionString: "Server=127.0.0.1,1433;Database=EcommerceCI;User Id=sa;Password=${{ secrets.CI_MSSQL_SA_PASSWORD }};TrustServerCertificate=True;MultipleActiveResultSets=True"
          JwtSettings__Key: ${{ secrets.CI_JWT_KEY }}
        run: |
          # Ajusta las rutas si tu API vive en otra carpeta
          dotnet ef database update --project src/Api/ --startup-project src/Api/

      # (Opcional) tests: no bloquean el PR
      - name: Unit tests (non-blocking)
        run: dotnet test --no-build --verbosity normal || true
