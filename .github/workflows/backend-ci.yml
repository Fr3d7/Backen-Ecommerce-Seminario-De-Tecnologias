name: backend-ci

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

concurrency:
  group: backend-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-migrate:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    # Subimos los secretos a variables de entorno del job
    env:
      MSSQL_SA_PASSWORD: ${{ secrets.CI_MSSQL_SA_PASSWORD }}
      JWT_KEY: ${{ secrets.CI_JWT_KEY }}
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      ASPNETCORE_ENVIRONMENT: CI

    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          ACCEPT_EULA: "Y"
          SA_PASSWORD: ${{ env.MSSQL_SA_PASSWORD }}
        ports:
          - "1433:1433"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Install EF tools
        run: dotnet tool install --global dotnet-ef

      - name: Add dotnet tools to PATH
        shell: bash
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      # Espera activa hasta que SQL acepte conexiones
      - name: Wait for SQL to be healthy
        shell: bash
        run: |
          for i in {1..120}; do
            /opt/mssql-tools18/bin/sqlcmd -C -S localhost -U sa -P "$MSSQL_SA_PASSWORD" -Q "SELECT 1" && exit 0
            echo "SQL not ready yet... ($i)"; sleep 2
          done
          echo "SQL NOT healthy after waiting"; exit 1

      - name: Apply EF migrations
        env:
          ConnectionStrings__ConnectionString: "Server=localhost,1433;Database=EcommerceCI;User Id=sa;Password=${{ env.MSSQL_SA_PASSWORD }};TrustServerCertificate=True;MultipleActiveResultSets=True"
          ConnectionStrings__DefaultConnection: "Server=localhost,1433;Database=EcommerceCI;User Id=sa;Password=${{ env.MSSQL_SA_PASSWORD }};TrustServerCertificate=True;MultipleActiveResultSets=True"
          JwtSettings__Key: ${{ env.JWT_KEY }}
        run: |
          dotnet ef database update \
            --project src/Api/Ecommerce.Api.csproj \
            --startup-project src/Api/Ecommerce.Api.csproj

      # Opcional: que no bloquee
      - name: Unit tests (non-blocking)
        run: dotnet test --no-build --verbosity normal || true
